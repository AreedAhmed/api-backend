<?php declare(strict_types=1);

namespace Reconmap\Controllers\Targets;

use League\Plates\Engine;
use Monolog\Logger;
use Psr\Http\Message\ServerRequestInterface;
use Reconmap\Controllers\Vulnerabilities\CreateVulnerabilityController;
use Reconmap\DatabaseTestCase;
use Reconmap\Services\TemplateEngine;

class CreateVulnerabilityControllerTest extends DatabaseTestCase
{

    public function testSuccess(): void
    {
        /** @var Logger|MockObject */
        $logger = $this->createMock(Logger::class);
        /** @var Engine|MockObject */
        $template = $this->createMock(TemplateEngine::class);
        $db = $this->getDatabaseConnection();

        $request = $this->createMock(ServerRequestInterface::class);
        $request->expects($this->once())
            ->method('getAttribute')
            ->with('userId')
            ->willReturn(1);
        $request->expects($this->once())
            ->method('getBody')
            ->willReturn(json_encode(['project_id' => 1, 'summary' => 'SQL injection', 'risk' => 'low']));

        $controller = new CreateVulnerabilityController($logger, $db, $template);
        $response = $controller($request);
        $this->assertGreaterThan(0, $response['success']);
    }
}
